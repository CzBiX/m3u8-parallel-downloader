name: Go

on:
  release:
    types: [ published ]
  push:
    branches: [ master ]
    paths:
      - "**/*.go"
      - "go.mod"
      - "go.sum"
      - ".github/workflows/*.yml"
  pull_request:
    branches: [ master ]
    paths:
      - "**/*.go"
      - "go.mod"
      - "go.sum"
      - ".github/workflows/*.yml"

jobs:
  build:
    strategy:
      matrix:
        include:
        - goos: linux
          goarch: arm
          goarm: 7
        - goos: linux
          goarch: amd64
        - goos: darwin
          goarch: amd64
        - goos: darwin
          goarch: arm64
    runs-on: ubuntu-latest
    env:
      GOOS: ${{ matrix.goos }}
      GOARCH: ${{ matrix.goarch }}
      GOARM: ${{ matrix.goarm }}
        
    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 0

    - id: get_filename
      run: |
        echo "::set-output name=ASSET_NAME::$GOOS-$GOARCH$GOARM"
        echo "ASSET_NAME=$_NAME" >> $GITHUB_ENV

    - name: Set up Go
      uses: actions/setup-go@v2
      with:
        go-version: 1.17

    - name: Build
      run: ./scripts/build.sh

    - name: Test
      run: go test -v
    
    - name: Zip
      run: |
        mkdir build
        cd build
        zip -vr release.zip .
      
    - name: Upload
      uses: actions/upload-artifact@v2
      with:
        name: m3u8-downloader-${{ steps.get_filename.outputs.ASSET_NAME }}.zip
        path: build/release.zip

    - name: Upload files to GitHub release
      uses: actions/upload-release-asset@v1
      if: github.event_name == 'release'
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ github.event.release.upload_url }}
        asset_path: ./build/release.zip
        asset_name: m3u8-downloader-${{ steps.get_filename.outputs.ASSET_NAME }}.zip
        asset_content_type: application/zip
